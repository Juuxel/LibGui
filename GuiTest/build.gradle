buildscript {
	repositories {
		jcenter()
	}
}

plugins {
	id 'fabric-loom' version '0.2.6-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

if(rootProject.file('private.gradle').exists()) { //Publishing details
	apply from: 'private.gradle'
}

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

//configurations.modApi {
//    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
//}

repositories {
	mavenLocal();
	maven { url "http://server.bbkr.space:8081/artifactory/libs-release" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modApi "net.fabricmc:fabric-loader:${project.loader_version}"
	modApi "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modApi "io.github.cottonmc:Jankson-Fabric:${project.jankson_version}"
	include "io.github.cottonmc:Jankson-Fabric:${project.jankson_version}"

	compileOnly ("com.google.code.findbugs:jsr305:3.0.2") { transitive = false }


	//modApi ("io.github.prospector:modmenu:1.7.10-unstable.19w35a+build.2")// { transitive = false }
	modCompileOnly "io.github.prospector:modmenu:1.7.10-unstable.19w35a+build.2"
	//modApi ("io.github.cottonmc:LibGui:1.3.1-SNAPSHOT") { changing = true }
	compile (project(":LibGUI")) { transitive = false };
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}